{"ast":null,"code":"var _jsxFileName = \"/home/codespace/workspace/matheus-silva.me/pages/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Layout from \"../../components/Layout\";\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport { rhythm, scale } from \"../../components/utils/typography\";\nimport Bio from \"../../components/Bio\";\nimport { format } from 'date-fns';\n\nconst Post = props => {\n  const {\n    post,\n    morePosts,\n    preview\n  } = props;\n  const router = useRouter();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, router.isFallback ? __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME)), __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      marginTop: rhythm(1),\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, post.title), __jsx(\"p\", {\n    style: _objectSpread(_objectSpread({}, scale(-1 / 5)), {}, {\n      display: `block`,\n      marginBottom: rhythm(1)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, format(new Date(post.date), 'yyyy-mm-dd'))), __jsx(\"section\", {\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"hr\", {\n    style: {\n      marginBottom: rhythm(1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(Bio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Post;\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, [\"title\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await markdownToHtml(post.content || \"\");\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n  return {\n    paths: posts.map(posts => {\n      return {\n        params: {\n          slug: posts.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/codespace/workspace/matheus-silva.me/pages/posts/[slug].tsx"],"names":["useRouter","ErrorPage","Layout","getPostBySlug","getAllPosts","Head","CMS_NAME","markdownToHtml","rhythm","scale","Bio","format","Post","props","post","morePosts","preview","router","isFallback","slug","title","marginTop","marginBottom","display","Date","date","__html","content","getStaticProps","params","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\"\nimport ErrorPage from \"next/error\"\nimport Layout from \"../../components/Layout\"\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\"\nimport Head from \"next/head\"\nimport { CMS_NAME } from \"../../lib/constants\"\nimport markdownToHtml from \"../../lib/markdownToHtml\"\nimport PostType from \"../../types/post\"\nimport { rhythm, scale } from \"../../components/utils/typography\"\nimport Bio from \"../../components/Bio\"\nimport { format } from 'date-fns';\n\ntype Props = {\n  post: PostType\n  morePosts?: PostType[]\n  preview?: boolean\n}\n\nconst Post = (props: Props) => {\n  const { post, morePosts, preview } = props;\n\n  const router = useRouter();\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n\n  return (\n    <Layout>\n      {router.isFallback ? (\n        <h1>Loadingâ€¦</h1>\n      ) : (\n        <>\n            <article>\n            <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n              </Head>\n            <header>\n              <h1\n                style={{\n                  marginTop: rhythm(1),\n                  marginBottom: 0,\n                }}\n              >\n                {post.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: `block`,\n                  marginBottom: rhythm(1),\n                }}\n              >\n                {format(new Date(post.date), 'yyyy-mm-dd')}\n              </p>\n            </header>\n            <section dangerouslySetInnerHTML={{ __html: post.content }} />\n            <hr\n              style={{\n                marginBottom: rhythm(1),\n              }}\n            />\n            <footer>\n              <Bio />\n            </footer>\n          </article>\n        </>\n      )}\n    </Layout>\n  )\n}\n\nexport default Post\n\ntype Params = {\n  params: {\n    slug: string\n  }\n}\n\nexport async function getStaticProps({ params }: Params) {\n  const post = getPostBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ])\n  const content = await markdownToHtml(post.content || \"\")\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"])\n\n  return {\n    paths: posts.map(posts => {\n      return {\n        params: {\n          slug: posts.slug,\n        },\n      }\n    }),\n    fallback: false,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}